Ruo Log:

1/7/2022
- Searched for alternative IMUs as the BMX160 is out of stock and has long lead times.

1/11/2022
- Alternative components found and ordered.
    - Voltage regulator changed
    - BMS changed
    - Port changed from micro-USB to USB-C
    - IMU swapped from BMX160 to MPU
- Modified original schematic to reflect swapped out components.    

1/12/2022
- Updated schematic components to ECAD (used to be custom-made blocks that were used as placeholders)
- Updated schematic to needed resistor and capacitor values
- Started researching filter implementations to correct gyroscope noise

1/13/2022
- Updated schematic; replaced battery placeholder and renamed port labels
- Researched gyroscope data filtering 
    - Looked at "Optimization approach to adapt Kalman filters for the real-time application of accelerometer and gyroscope signalsâ€™ filtering" by Cezary Kownacki
- Started work on PCB design

1/16/2022
- Replaced pushbutton switch Jaxson added as the footprint for the switch had an error.
- Updated PCB design with new components Jaxson added, worked on routing and circuit board shape.

1/17/2022
- Replaced button again for a cheaper version
- Began routing new components in PCB schematic that Jaxson added

1/19/2022
- Added routes between all components on the PCB.
- Began verifying and correcting PCB design
- Had to revert changes due to a github repository mistake.

1/20/2022
- Began researching and taking notes on the OpenVR API and how to communicate with it

1/24/2022
- Added soldering jumpers and voltage test pads to the PCB

1/25/2022
- Added a resistor to an LED someone forgot
- Replaced zener circuit protection diodes with a different packaging as the old one was out of stock

1/26/2022
- Reorganized PCB layout, made it smaller and reduced the number of vias.
- Double checked PCB components and connections.

2/1/2022
- Added ground pour to second layer of PCB to help with heat management and improving signal integrity.

2/2/2022
- Added voltage test pads on board, changed designator label sizes

2/3/2022
- Starting creation of an OpenVR driver
- Example OpenVR driver created, simulates a joystick that is always pushing forward
- Driver configured to be a tracker instead

2/4/2022
- Tested tracker driver that simulates a stationary block floating in free space
- Connected tracker to model in OpenVR, was able to get the waist to latch onto the simulated tracker.
- Began work on transferring IMU data into model

2/6/2022
- Updated model to represent a coordinate system
- Tested OpenVR API by making model move up and down using preset values
- Tested OpenVR API by changing quaternion values (caused it to stretch out due to the rotation causing scaling issues)

2/7/2022
- Imported UDP server into NLOS SteamVR driver which is able to read data from our prototype
- Implemented quaternion calculations provided by https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles
- IMU data is registered by steamVR and the tracker is moving its representation, albeit very choppy and not calibrated.

2/9/2022
- Worked on fine-tuning the tracker so the movement within VR is not choppy

2/10/2022
- Began developing math library to help with quarternions calculations

2/15/2022
- Bare minimum quaternion math implemented; gimbal lock issue fixed. Rotation in tracker is now correctly tracked.

2/20/2022
- OpenVR driver configured to handle multiplt drivers. UDP thread working in driver; all tracker data is now received. Tracking stutters less.
- Prototype tracker configured to represent multiple trackers to test new version of the driver.
- Working on getting position data from rotation in order to move limbs correctly.

2/25/2022
- Ordered dev boards to replace PCBs because we weren't sure if we could get it working in time

2/26/2022
- Attempted to get position of trackers (limbs) via conversion of quaternions back to euler angles.
	- Inefficient, inaccurate.
- Expanded math library to include quaternion multiplication.
- https://personal.utdallas.edu/~sxb027100/dock/quaternion.html
- https://ahrs.readthedocs.io/en/latest/filters/angular.html
- https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles

2/27/2022
- Body kinematics implemented with Quaternions

3/2/2022
- Integrated Joe's code, readings are now much more accurate before (drift is still an issue)
- Began work on filter

3/3/2022
- Worked with Andres to integrate client, backend server, and OpenVR drivers in order to send tracker data to where it needs to go
- Converted OpenVR UDP server to client that receives data from the server.
- Updated Joe's program to output a JSON file correctly.

3/9/2022
- Wrote code to allow ESP32 to receive data from server

3/10/2022
- Considering offloading calculations to either the server or the ESP32s themselves to save on processing power (currently, transmitting tracker->server->driver is slower than
  usual)
- Wrote code for ESP32 to allow SSID and password to be configured over UART, so the user does not have to reprogram the ESP32 every time.

3/15/2022
- Utilized DMP on the MPU6050 to minimize the error from gyroscope drift
- Rewrote driver code to account for calculations shifting to the server, rather than handling everything on the driver.